

package Interfaz;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;


/**
 *
 * @author Jhonatan
 */
public class Pantalla extends javax.swing.JFrame {

    private File selectedFile;
    
    /**
     * Creates new form Pantalla
     */
    public Pantalla() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        Archivo = new javax.swing.JMenu();
        abrir = new javax.swing.JMenuItem();
        save = new javax.swing.JMenuItem();
        assave = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("Entrada");

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jLabel2.setText("Salida");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(64, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34))
        );

        Archivo.setText("Archivo");
        Archivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ArchivoMouseClicked(evt);
            }
        });

        abrir.setText("Abrir archivo");
        abrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                abrirMouseClicked(evt);
            }
        });
        abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirActionPerformed(evt);
            }
        });
        Archivo.add(abrir);

        save.setText("Guardar");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        Archivo.add(save);

        assave.setText("Guardar Como");
        assave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assaveActionPerformed(evt);
            }
        });
        Archivo.add(assave);

        jMenuBar1.add(Archivo);

        jMenu2.setText("Analizador");

        jMenuItem4.setText("StatPy");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem5.setText("JSON");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Graficas");

        jMenuItem1.setText("Barras");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuItem2.setText("Pie");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Reporte");

        jMenuItem3.setText("TOKENS");
        jMenu4.add(jMenuItem3);

        jMenuItem6.setText("ERRORES");
        jMenu4.add(jMenuItem6);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ArchivoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ArchivoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ArchivoMouseClicked

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // Limpiar listas par barras:
        func.Funcion.EjeX.clear();
        func.Funcion.Titulo.clear();
        func.Funcion.TituloX.clear();
        func.Funcion.TituloY.clear();
        func.Funcion.Valores.clear();
        // Limpiar Listas para Pie
        func.Funcion.EjeX_pie.clear();
        func.Funcion.Titulo_pie.clear();
        func.Funcion.Valores_pie.clear();
        
        
         //Extraer codigo fuente 
        System.out.println("Inicia analisis statpy!!");
        String codigoFuente = jTextArea1.getText();
        
        //Recolectar nombre del json
        //Mandaar nombre del archivo 
//        proyecto1.Proyecto1.compilarjson(codigoFuente, nombreFile);
        //Creacion de analizador 
//        proyecto1.Proyecto1.analizadores("src/statpy/", "Lexer.jflex", "Parser.cup");
        //proyecto1.Proyecto1.analizadores("src/statpy/", "Lexer.jflex", "Parser.cup");
        
        //Ejecucion de analizadore 
        proyecto1.Proyecto1.analizarP(codigoFuente);
        
        System.out.println("------------------TTermino analisis sp --------------------------------");
        jTextArea2.setText(func.Funcion.codigo);
        System.out.println("-----------------Nuestra Dtos grafica --------------------------------");
        func.Funcion.mostrarDataBarras();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void assaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assaveActionPerformed
        // TODO add your handling code here:
        saveAs();
    }//GEN-LAST:event_assaveActionPerformed

    private void abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        //Agregar filtros
        FileNameExtensionFilter spFilter = new FileNameExtensionFilter("Archivos StatPy (.sp)", "sp");
        FileNameExtensionFilter jsonFilter = new FileNameExtensionFilter("Archivos Json (.json)", "json");
        
        fileChooser.addChoosableFileFilter(spFilter);
        fileChooser.addChoosableFileFilter(jsonFilter);
        
        int result = fileChooser.showOpenDialog(abrir);
        
        if (result == JFileChooser.APPROVE_OPTION){
            selectedFile = fileChooser.getSelectedFile();
                    try {
                        BufferedReader reader = new BufferedReader(new FileReader(selectedFile));
                        StringBuilder content = new StringBuilder();
                        String line;
                        
                        while ((line = reader.readLine()) != null) {
                            content.append(line).append("\n");
                        }
                        
                        reader.close();
                        jTextArea1.setText(content.toString());
                    } catch (IOException ex) {
                        ex.printStackTrace();
                        JOptionPane.showMessageDialog(abrir, "Error al abrir el archivo.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
        }
    }//GEN-LAST:event_abrirActionPerformed

    private void abrirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_abrirMouseClicked
        
          
    }//GEN-LAST:event_abrirMouseClicked

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        if (selectedFile != null){
            saveToFile(selectedFile);
        } else {
            saveAs();
        }
    }//GEN-LAST:event_saveActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        //Estructura para guardar clave : valor
       
        //Extraer codigo fuente 
        String codigoFuente = jTextArea1.getText();
        
        //Recolectar nombre del json
        String nombreFile = selectedFile.getName();
        //Mandaar nombre del archivo 
        proyecto1.Proyecto1.compilarjson(codigoFuente, nombreFile);
        //Creacion de analizador 
        proyecto1.Proyecto1.analizadores("src/Analizador/", "Scanner.jflex", "Parser.cup");
        //Ejecucion de analizadore 
        proyecto1.Proyecto1.analizar(codigoFuente);
        
        
        System.out.println("----- Termino el analisis ------------------");
        System.out.println("tokens de los json: ");
        func.Funcion.mostrar();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        //GRAFICA DE BARRAAAS
        Grafica.Barras grafica_barras = new Grafica.Barras();
        grafica_barras.setVisible(true); 
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        Grafica.Pie grafica_Pie = new Grafica.Pie();
        grafica_Pie.setVisible(true); 
    }//GEN-LAST:event_jMenuItem2ActionPerformed
    
    public void saveAs(){
        JFileChooser fileChooser = new JFileChooser();
        
        FileNameExtensionFilter spFilter = new FileNameExtensionFilter("Archivos StatPy (.sp)", "sp");
        FileNameExtensionFilter jsonFilter = new FileNameExtensionFilter("Archivos Json (.json)", "json");
        
        fileChooser.addChoosableFileFilter(spFilter);
        fileChooser.addChoosableFileFilter(jsonFilter);
        
        

        int result = fileChooser.showSaveDialog(jPanel1);

        if (result == JFileChooser.APPROVE_OPTION) {
            File newFile = fileChooser.getSelectedFile();
            saveToFile(newFile);
            selectedFile = newFile;
        }
    }
    
    public void saveToFile(File file){
        try {
            BufferedWriter writer = new BufferedWriter(new FileWriter(file));
            writer.write(jTextArea1.getText());
            writer.close();
            JOptionPane.showMessageDialog(jPanel1, "Archivo guardado exitosamente.", "Guardado", JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(jPanel1, "Error al guardar el archivo.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Archivo;
    private javax.swing.JMenuItem abrir;
    private javax.swing.JMenuItem assave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JMenuItem save;
    // End of variables declaration//GEN-END:variables
}
